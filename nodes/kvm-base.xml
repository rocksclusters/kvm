<?xml version="1.0" standalone="no"?>

<kickstart>


<description>
</description>


<copyright>
Copyright (c) 2000 - 2007 The Regents of the University of California.
All rights reserved. Rocks(tm) v4.3 www.rocksclusters.org
</copyright>


<changelog>
</changelog>


<package>bridge-utils</package>
<package>qemu-kvm</package>
<package>libvirt</package>
<package>libvirt-python</package>


<!-- no necessary but useful  -->
<!-- guestfish is broken in RHEL 6.3-->
<package cond="rocks_version_major == 6">guestfish</package>
<!-- losetup is in util-linux-ng -->
<package>util-linux-ng</package>
<package>qemu-kvm-tools</package>
<package>virt-manager</package>
<package cond="rocks_version_major == 6">virt-p2v</package>
<package>virt-top</package>
<package>virt-v2v</package>


<package>foundation-python-daemon</package>
<package>foundation-python-lockfile</package>
<package>rocks-command-kvm</package>
<package>rocks-kvm-vlan-init</package>
<package>gnutls-utils</package>

<!-- Packages for the CentOS 5 version -->
<package cond="rocks_version_major == 5">etherboot-roms-kvm</package>
<package cond="rocks_version_major == 5">etherboot-zroms-kvm</package>
<package cond="rocks_version_major == 5">kmod-kvm</package>
<package cond="rocks_version_major == 5">kvm</package>
<package cond="rocks_version_major == 5">kvm-qemu-img</package>
<package cond="rocks_version_major == 5">kvm-tools</package>


<post>
<!-- increase the max number of virtual interfaces that can be created -->

<file rcs='false' name="/etc/modprobe.d/netloop.conf">
options netloop nloopbacks=32
</file>

</post>


<post>


<file name="/etc/sysctl.conf" mode="append">
#https://bugzilla.redhat.com/show_bug.cgi?id=512206
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0
</file>

</post>


<!-- set up access to libvirt -->

<post>

<file name="/etc/sysconfig/libvirtd">
LIBVIRTD_ARGS="--listen"
</file>

</post>

<post>

<!-- create a client cert -->

mkdir -p /etc/pki/libvirt/private

<!-- speed up certtool -->
mv /dev/random /dev/random.orig
ln -s /dev/urandom /dev/random


/usr/bin/certtool --generate-privkey > /etc/pki/libvirt/private/clientkey.pem

<file name="/tmp/client.info">
organization = &Info_CertificateOrganization;
cn = &hostname;
expiration_days = 3650
tls_www_client
encryption_key
signing_key
</file>

/usr/bin/certtool --generate-certificate \
	--load-privkey /etc/pki/libvirt/private/clientkey.pem \
	--load-ca-certificate /etc/pki/CA/cacert.pem \
	--load-ca-privkey /tmp/cakey.pem \
	--template /tmp/client.info --outfile /etc/pki/libvirt/clientcert.pem


/bin/rm -f /tmp/client.info

</post>


<post>

<!-- now create a server cert -->

/usr/bin/certtool --generate-privkey > /etc/pki/libvirt/private/serverkey.pem

<file name="/tmp/server.info">
organization = &Info_CertificateOrganization;
cn = &hostname;
expiration_days = 3650
tls_www_server
encryption_key
signing_key
</file>

/usr/bin/certtool --generate-certificate \
	--load-privkey /etc/pki/libvirt/private/serverkey.pem \
	--load-ca-certificate /etc/pki/CA/cacert.pem \
	--load-ca-privkey /tmp/cakey.pem \
	--template /tmp/server.info --outfile /etc/pki/libvirt/servercert.pem

/bin/rm -f /tmp/server.info
/bin/rm -f /tmp/cakey.pem


<!-- restore original system -->
rm /dev/random
mv /dev/random.orig /dev/random

</post>



<post>
<!-- Create the bridges on the physical interafce for kvm -->
<eval mode="xml">
/opt/rocks/bin/rocks report host network &hostname;
</eval>
</post>


<post>
<!-- automatically start kvm vlan for Macvtap interfaces after a reboot
     this is needed to automatically restart VM after a reboot  -->
/sbin/chkconfig rocks-kvm-vlan on
</post>


<!-- we need to place the directory to save KVM status in a
     big partition. Libvirt does not allow to set this directory
     through configuration parameters do we ln -s -->
<post>
<file name="/etc/rc.d/rocksconfig.d/post-10-kvm-save-dir" perms="755">
#!/bin/bash


if [ "&kvm_save_directory;" ]; then
	BIG_PART="&kvm_save_directory;"
else
	# we need to find the biggest partition available
	BIG_PART=`/opt/rocks/bin/rocks list host partition &hostname; bigmnt=1`
	BIG_PART="$BIG_PART/kvm/save"
fi

# remove old stale saved VM in case there are still hanging there
rm -f $BIG_PART/*.save

ORIG=/var/lib/libvirt/qemu/save
if [ -e "$ORIG" ]; then
	rm -rf $ORIG
fi
mkdir -p "$BIG_PART";
chown qemu:qemu "$BIG_PART";
ln -s "$BIG_PART" $ORIG;

rm -f /etc/rc.d/rocksconfig.d/post-10-kvm-save-dir
</file>
</post>

</kickstart>

